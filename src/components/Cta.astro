---
// デフォルトのコンテンツを定義
const defaultContent = {
  title: "さあ、あなたのビジネスの本当の価値を、\nWebサイトで日本のファンに届けませんか？",
  subtitle: "私たちが、言葉や文化、デジタルの壁を越えるお手伝いをします。",
  buttonText: "今すぐ無料で相談してみる",
  notice: "お問い合わせ後、24時間以内にご希望の言語でご連絡します。無理な営業は一切いたしません。"
};
// contentが渡されない場合は、defaultContentを使用するように修正
const { id, content = defaultContent } = Astro.props;
---

<!-- 2025年最新のCTAセクション：権威性とプロフェッショナル感を演出 -->
<section id={id} class="relative bg-gradient-to-br from-primary-600 via-primary-700 to-primary-800 overflow-hidden">
  
  <!-- 背景装飾 -->
  <div class="absolute inset-0 overflow-hidden">
    <!-- メインの幾何学パターン -->
    <div class="absolute top-0 right-0 w-96 h-96 lg:w-[600px] lg:h-[600px] transform translate-x-1/2 -translate-y-1/2">
      <div class="w-full h-full bg-gradient-secondary rounded-full opacity-10 animate-pulse-slow"></div>
    </div>
    
    <!-- セカンダリパターン -->
    <div class="absolute bottom-0 left-0 w-64 h-64 lg:w-96 lg:h-96 transform -translate-x-1/2 translate-y-1/2">
      <div class="w-full h-full bg-gradient-accent rounded-full opacity-10 animate-pulse-slow" style="animation-delay: 1.5s;"></div>
    </div>
    
    <!-- アクセントパターン -->
    <div class="absolute top-1/2 left-1/2 w-32 h-32 lg:w-48 lg:h-48 transform -translate-x-1/2 -translate-y-1/2">
      <div class="w-full h-full bg-white rounded-full opacity-5 animate-float"></div>
    </div>
  </div>

  <div class="relative z-10 max-w-6xl mx-auto text-center py-20 lg:py-32 px-4 sm:px-6 lg:px-8">
    
    <!-- メインコンテンツ -->
    <div class="space-y-8">
      
      <!-- タイトル -->
      <div class="space-y-6">
        <h2 class="text-4xl sm:text-5xl lg:text-6xl xl:text-7xl font-bold text-white leading-tight whitespace-pre-line">
          {content.title}
        </h2>
        
        <p class="text-lg sm:text-xl lg:text-2xl text-primary-100 leading-relaxed max-w-4xl mx-auto">
          {content.subtitle}
        </p>
      </div>

      <!-- CTAボタン -->
      <div class="pt-8">
        <a 
          href="#contact" 
          class="inline-flex items-center px-8 py-4 lg:px-12 lg:py-6 bg-white text-primary-700 font-bold text-lg lg:text-xl rounded-2xl shadow-intense hover:shadow-glow hover:scale-105 transition-all duration-300 transform group"
        >
          <span>{content.buttonText}</span>
          <svg class="ml-3 w-6 h-6 group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
          </svg>
        </a>
      </div>

      <!-- 通知文 -->
      <div class="pt-6">
        <div class="inline-flex items-center px-6 py-3 bg-white/10 backdrop-blur-sm rounded-full text-primary-100 text-sm lg:text-base">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          {content.notice}
        </div>
      </div>
    </div>

    <!-- 装飾的な要素 -->
    <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2">
      <div class="w-12 h-12 border-2 border-white/30 rounded-full flex items-center justify-center animate-bounce">
        <div class="w-2 h-2 bg-white rounded-full animate-pulse"></div>
      </div>
    </div>
  </div>
  
  <!-- ボトムグラデーション -->
  <div class="absolute bottom-0 left-0 w-full h-2 bg-gradient-to-r from-transparent via-white/20 to-transparent"></div>
</section>

<script>
  // スクロールアニメーション
  document.addEventListener('DOMContentLoaded', () => {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in-up');
        }
      });
    }, observerOptions);

    // CTA要素を監視
    const ctaSection = document.getElementById(id);
    if (ctaSection) {
      ctaSection.classList.add('animate-on-scroll');
      observer.observe(ctaSection);
    }
  });
</script>
